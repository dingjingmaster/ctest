#include <stdio.h>
#include <unistd.h>
#include <signal.h>
#include <time.h>
#include <pthread.h>
#include <stdlib.h>
#include "egi_log.h"
#include "egi_fbgeom.h"

void test_log1(void)
{
	int i;
	pthread_detach(pthread_self());
	for(i=0;i<10;i++)
	{
		EGI_PLOG(LOGLV_INFO," From file %s,  %s(): LOGLV_INFO---%d--- \n",__FILE__,__FUNCTION__,i);
	}
	pthread_exit(0);
}
void test_log2(void)
{
	int i;
	pthread_detach(pthread_self());
	for(i=0;i<10;i++)
	{
		EGI_PLOG(LOGLV_ERROR,"%s(): LOGLV_ERROR---%d--- \n",__FUNCTION__,i);
//		exit(0);
	}
	pthread_exit(0);
}
void test_log3(void)
{
	int i;
	pthread_detach(pthread_self());
	for(i=0;i<10;i++)
	{
		EGI_PLOG(LOGLV_INFO,"log3: LOGLV_INFO---- %d ---- \n",i);
	}
	pthread_exit(0);
}


/*  ---------------------  MAIN  ---------------------  */
int main(int argc, char **argv)
{
	int i,j;
	int index;
	int ret;

  /* test -------- egi_log funcs-------- */
	pthread_t thread_log1;
	pthread_t thread_log2;
	pthread_t thread_log3;


	/* --- start egi tick --- */
	tm_start_egitick();

  while(1)
  {
	/* --- init log --- */
	if(egi_init_log() !=0)
	{
	   printf("egi_init_log() fails! \n");
	   exit(0);
	}


	printf("test mutli_thread call egi_push_log()...\n");
	pthread_create(&thread_log1, NULL, (void *)test_log1, NULL);
	pthread_create(&thread_log2, NULL, (void *)test_log2, NULL);
	pthread_create(&thread_log3, NULL, (void *)test_log3, NULL);
	egi_push_log(LOGLV_WARN,"---- Good day! WARN Log  finish. ----\n");
	egi_push_log(LOGLV_TEST,"---- Good day! TEST Log  finish. ----\n");

	tm_delayms(30);

	printf("egi_quit_log...\n");
	egi_quit_log();
}

}
