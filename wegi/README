Some concepts:
1. The EGI mainly focus on EGI_IMG type data processing and PAGE managing/displaying, 
   Always try to avoid processing other type data and handling other events.

2. The APP will handle/process its own business data, and convert it to EGI_IMG type if
   it needs graphic displaying.

3. or, The EGI prepare/set PAGE environment according to APP's request, then the APP
   will use EGI interface to displaying any content by itself. ERING will be applied
   as a way of IPC.

4. The APP consists of two kinds of components: EGI_UI PAGEs, and executable APP files.
   They will be forked and launched as child processes of homepage program.
   By such a way that we can code and develop APPs independently, To install them, we only
   need to inform homepage programe its icons and bin file location/address. It can also
   run independently without homepage.
   Examples: wegi/app/ffplay  wegi/app/ebook

5. All child processes to be handled by ULOOP_PROCESSE, as possible?.

6. Since APP processes will be suspended and reactivated by signals(STOP/CONT), and data 
   transfering will be cut off and leg go abruptly by the signals. For example, LCD displays 
   with SPI transfering color data, sound card plays with I2S transfering pcm data.
   Take care of those situations, so broken dataflow will not cause any disfunction.

NOTE:
1. Difference between OpenWRT uClibc and Glibc may cause some trouble!?
2. In uClibc calling malloc(0) returns NULL, while Glibc returs a valid pointer? same
   situation for realloc().
3. uClibc can run on MMU-less systems.
4. The homepage main process shall be as small as possible, most heavier codes and jobs
   are to be carried out by the APP, so it will be fast enough to fork() and execv() a
   new APP. 
   The FreeType2 fonts shall NOT be loaded in the main process!
5. 

Please see basic ebox concept in egi.h/egi.c, see symbol concept in symbol.c/FTsymbol.c

	----- main source files ( GPL v2 ) -----

egi_fbgeom.c	fb and basic geometry functions
xtp2046.c	touch controller interface funcs
egi.c		concept ebox functions
egi_color.c	color definition and conversion functions
egi_symbol.c	fonts/icons/symbols...definition and functions
egi_FTsymbol.c  FreeType2 fonts handling functions
egi_bmpjpg.c	funcs for processing bmp and jpg files
egi_timer.c	timer and delay 
egi_debug.c	for debug
egi_log.c	for logger operation 
egi_utils.c	some helper functions
egi_https.c	curl https API
egi_math.c	a common math function module
egi_fifo.c	a common fifo module for EGI
egi_filo.c	a common filo module for EGI
egi_iotclient.c		A BIGIOT client application.
egi_ring.c	a ERING mechanism for process communication between UI and APPs.
egi_txt.c	type_txt ebox functions
egi_btn.c	type_btn ebox	
egi_slider.c	type_slier ebox, for sliding bar.
egi_list.c	type_list ebox
egi_pic.c	type_pic ebox
egi_iwinfo.c	wifi info. extraction

sys_list.h	from list operation derived from Linux kernel codes. 

egi_objtxt.c	type_txt objects creation functions
egi_objlist.c   list objects 

egi_pagehome.c		PAGE home
egi_pagemplay.c	        PAGE mplayer
egi_pageopenwrt.c	PAGE openwrt info.
egi_pagetest.c		PAGE test
egi_pageslide.c		PAGE sliding bar test

egi_appstock.c		a real time stock data display app.

he_weather.c		API for www.heweather.com 


--- APPS ----
app_ffplay.c + egi_pageffplay.c		
app_ebook.c + page_ebook.c


Dependency Libs:
libcurl, 
libpng, libjpeg, 
libjson-c, 
libubus, libubox, 
libshine,libasound,
libfreetype2
... ... 


Midas Zhou
midaszhou@yahoo.com

Don't forget why we start! ---Just for FUN!
